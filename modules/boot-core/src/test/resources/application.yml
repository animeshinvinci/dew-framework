dew:
  basic:
    format:
      use-unity-error: true
      reuse-http-state: false
    error-mapping:
      "[com.tairanchina.csp.dew.core.AuthException]":
        http-code: 401
        business-code: x00010
        message: 认证错误
  cluster:
    cache: redis
    dist: redis
    mq: rabbit
  jdbc:
    base-packages: ["com.tairanchina.csp.dew.core.**.dao"]
  sharding:
    sharding-flag: false
    file-name: withAssignedDataSource.yaml
  security:
    #auth-adapter: uc
    token-flag: _token_
    token-in-header: true
    token-hash: false
    uc-auth-adapter:
      host: http://10.200.4.37:8085
      app-id: ucbiwkt4s9r5vh34rb
      app-secret: 30f3496d8fb148828135551b9cd81999
#  security:
#   includeServices: ["a-serv"]

spring:
  jackson:
    serialization:
      write_dates_as_timestamps: false
  cache:
    type: redis
  application:
    name: core-test
  redis:
    host: 127.0.0.1
    port: 6379
    database: 0
    pool:
      max-active: 10
      max-wait: -1
      max-idle: 1
      min-idle: 0
    #password: tairan2017@
  rabbitmq:
    host: mq.fengdai.org
    port: 5672
    username: guest
    password: guest
  hazelcast:
    addresses: ["127.0.0.1"]
  ignite:
    addresses: ["127.0.0.1"]
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:test
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
  multi-datasources:
    test1:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://mysql.fengdai.org:3306/X?useUnicode=true&characterEncoding=utf-8
      username: root
      password: tairan2017!
    test2:
      driver-class-name: org.postgresql.Driver
      url: jdbc:postgresql://10.200.131.24:5432/postgres
      username: postgres
      password: tairan.2017

sharding:
  jdbc:
    datasource:
      names: ds_0,ds_1
      ds_0:
        type: org.apache.commons.dbcp.BasicDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://mysql.fengdai.org:3306/ds_yaml_0
        username: root
        password: tairan2017!
      ds_1:
        type: org.apache.commons.dbcp.BasicDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://mysql.fengdai.org:3306/ds_yaml_1
        username: root
        password: tairan2017!
    config:
      sharding:
        tables:
          t_order:
            actualDataNodes: ds_${0..1}.t_order_${0..1}
            #generateKeyColumns:
              #- columnName: order_id
            tableStrategy:
              inline:
                shardingColumn: order_id
                #algorithmClassName: 分表算法全类名，该类需使用默认的构造器或者提供无参数的构造器，与algorithmExpression出现一个即可
                algorithmInlineExpression: t_order_${order_id.longValue() % 2}
          t_order_item:
            actualDataNodes: ds_${0..1}.t_order_item_${0..1}
            #绑定表中其余的表的策略与第一张表的策略相同
            tableStrategy:
              inline:
                shardingColumn: order_id
                #algorithmClassName: 分表算法全类名，该类需使用默认的构造器或者提供无参数的构造器，与algorithmExpression出现一个即可
                algorithmInlineExpression: t_order_item_${order_id.longValue() % 2}
        bindingTables:
          - t_order,t_order_item
        #默认数据库分片策略
        defaultDatabaseStrategy:
          inline:
            shardingColumn: user_id
            #algorithmClassName: 分表算法全类名，该类需使用默认的构造器或者提供无参数的构造器，与algorithmExpression出现一个即可
            algorithmInlineExpression: ds_${user_id.longValue() % 2}
        props:
          sql.show: true
#      masterslave:
