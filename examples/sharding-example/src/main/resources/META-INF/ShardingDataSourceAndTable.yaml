dataSources:
  ds_0: !!com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://mysql.fengdai.org:3306/ds_yaml_0
    username: root
    password: tairan2017!
  ds_1: !!com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://mysql.fengdai.org:3306/ds_yaml_1
    username: root
    password: tairan2017!
tables:
  t_order: 
    actualDataNodes: ds_${0..1}.t_order_${0..1}
    #generateKeyColumns:
      #- columnName: order_id
    tableStrategy:
      standard: #标准分片策略，用于单分片键的场景
        shardingColumn: order_id
        preciseAlgorithmClassName: com.tairanchina.csp.dew.core.sharding.algorithm.DewLongShardingAlgorithm
      #inline:
        #shardingColumn: order_id
        #algorithmInlineExpression: t_order_${order_id.longValue() % 2}
    #keyGeneratorColumnName: order_id
    #keyGeneratorClass: io.shardingjdbc.core.yaml.fixture.IncrementKeyGenerator
  t_order_item:
    actualDataNodes: ds_${0..1}.t_order_item_${0..1}
    #绑定表中其余的表的策略与第一张表的策略相同
    tableStrategy:
      standard: #标准分片策略，用于单分片键的场景
        shardingColumn: order_id
        preciseAlgorithmClassName: com.tairanchina.csp.dew.core.sharding.algorithm.DewLongShardingAlgorithm
bindingTables:
  - t_order,t_order_item
  
#默认数据库分片策略
defaultDatabaseStrategy:
  standard:
    shardingColumn: user_id
    preciseAlgorithmClassName: com.tairanchina.csp.dew.core.sharding.algorithm.DewIntegerShardingAlgorithm
props:
  sql.show: true
