spring:
  application:
    name: sharding-example
  datasource:
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ds_yaml_1
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
sharding:
  jdbc:
    dataSource:
      names: ds_master_0,ds_master_1,ds_master_0_slave_0,ds_master_0_slave_1,ds_master_1_slave_0,ds_master_1_slave_1
      ds_master_0:
        type: org.apache.commons.dbcp.BasicDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/demo_ds_master_0
        username: root
        password: 123456
      ds_master_0_slave_0:
        type: org.apache.commons.dbcp.BasicDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/demo_ds_master_0_slave_0
        username: root
        password: 123456
      ds_master_0_slave_1:
        type: org.apache.commons.dbcp.BasicDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/demo_ds_master_0_slave_1
        username: root
        password: 123456
      ds_master_1:
        type: org.apache.commons.dbcp.BasicDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/demo_ds_master_1
        username: root
        password: 123456
      ds_master_1_slave_0:
        type: org.apache.commons.dbcp.BasicDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/demo_ds_master_1_slave_0
        username: root
        password: 123456
      ds_master_1_slave_1:
        type: org.apache.commons.dbcp.BasicDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/demo_ds_master_1_slave_1
        username: root
        password: 123456

    config:
      sharding:
        tables:
          t_order:
            actualDataNodes: ds_${0..1}.t_order_${0..1}
            tableStrategy:
              inline:
                shardingColumn: order_id
                algorithmInlineExpression: t_order_${order_id % 2}
          t_order_item:
            actualDataNodes: ds_${0..1}.t_order_item_${0..1}
            tableStrategy:
              inline:
                shardingColumn: order_id
                algorithmInlineExpression: t_order_item_${order_id % 2}
        #默认数据库分片策略
        defaultDatabaseStrategy:
          inline:
            shardingColumn: user_id
            algorithmInlineExpression: ds_${user_id.longValue() % 2}
        masterSlaveRules:
          ds_0:
            masterDataSourceName: ds_master_0
            slaveDataSourceNames: [ds_master_0_slave_0, ds_master_0_slave_1]
          ds_1:
            masterDataSourceName: ds_master_1
            slaveDataSourceNames: [ds_master_1_slave_0, ds_master_1_slave_1]

